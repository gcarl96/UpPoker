[{"/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/App.js":"1","/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/components/InputPanel/InputPanel.jsx":"2","/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/index.js":"3","/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/components/WinningMessage/WinningMessage.jsx":"4","/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/components/Seat/Seat.jsx":"5","/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/components/Game/Game.jsx":"6","/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/components/Home/Home.jsx":"7"},{"size":409,"mtime":1606651021413,"results":"8","hashOfConfig":"9"},{"size":2568,"mtime":1613841379489,"results":"10","hashOfConfig":"9"},{"size":246,"mtime":1614025123759,"results":"11","hashOfConfig":"9"},{"size":866,"mtime":1609601086554,"results":"12","hashOfConfig":"9"},{"size":1584,"mtime":1611002963742,"results":"13","hashOfConfig":"9"},{"size":11331,"mtime":1613840813300,"results":"14","hashOfConfig":"9"},{"size":1936,"mtime":1610896536449,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vbdujq",{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/App.js",[],"/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/components/InputPanel/InputPanel.jsx",["32","33","34","35"],"import React, {useState} from 'react'\nimport {Grid, Button, Slider} from '@material-ui/core'\n\nconst calcAvailableActions = (gameData, playerData) => {\n    var actions = [];\n    if (!gameData || !playerData) {\n        return actions;\n    }\n    if (gameData['readyToDeal']) {\n        actions.push(\"Deal\");\n    }\n    if (gameData['currentPlayer']!=playerData['seat_number']) {\n        return actions\n    }\n    if (gameData['round'] === \"Show\") {\n        actions.push(\"Show\");\n    } else {\n        if (gameData['currentBet'] === playerData['betAmount']) {\n            actions.push(\"Check\");\n        } else {\n            actions.push(\"Call\");\n        }\n        actions.push(\"Fold\");\n        actions.push(\"Bet\");\n        actions.push(\"Bet Amount\")\n    }\n    return actions;\n}\n\nconst ActionItem = (actionType, makeAction, minBetAmount, maxBetAmount, betAmount, setBetAmount) => {\n    console.log(minBetAmount, maxBetAmount, betAmount);\n    if (actionType === \"Bet Amount\") {\n        if (maxBetAmount > 0) {\n            return <Slider\n                min={minBetAmount}\n                max={maxBetAmount}\n                value={betAmount}\n                aria-labelledby=\"discrete-slider-always\"\n                onChange={ (e, val) => setBetAmount(val) }\n                step={10}\n                marks\n                valueLabelDisplay=\"on\"\n            />\n        } else {\n            return <div></div>\n        }\n        \n    } else {\n        return <Button variant=\"contained\" color=\"primary\" onClick={() => { makeAction(actionType) }}>\n                    {actionType}\n                </Button>\n    }\n}\n    \n\nconst InputPanel = ({state, makeAction, betAmount, setBetAmount}) => {\n    const {username, gameData, playerData, room} = state\n    const actions = calcAvailableActions(gameData, playerData);\n    var minBetAmount = playerData ? gameData['currentBet'] - playerData['betAmount'] : 0\n    var maxBetAmount = playerData ? playerData['chips'] : 0\n    if (maxBetAmount < minBetAmount) {\n        minBetAmount = maxBetAmount;\n    }\n    \n    if (betAmount > maxBetAmount) {\n        betAmount = maxBetAmount;\n    }\n    if (betAmount < minBetAmount) {\n        betAmount = minBetAmount;\n    }\n    \n    return (\n        <div  className=\"App\">\n          <Grid container>\n              {actions.map(action => (\n                <Grid item xs={2}>\n                    {ActionItem(action, makeAction, minBetAmount, maxBetAmount, betAmount, setBetAmount)}\n                </Grid>\n              ))\n              }\n          </Grid>\n        </div>\n      );\n}\n\nexport default InputPanel","/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/index.js",[],"/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/components/WinningMessage/WinningMessage.jsx",[],"/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/components/Seat/Seat.jsx",["36"],"import React from 'react'\nimport BlueCard from '../../resources/Cards/blue_back.png'\n\nconst getPositionString = (seat_number, dealer, smallBlind, bigBlind) => {\n    var positionString = \"\";\n    if(seat_number === dealer) {\n        positionString += \"D \";\n    }\n    if(seat_number === smallBlind) {\n        positionString += \"SB \";\n    }\n    if(seat_number === bigBlind) {\n        positionString += \"BB \";\n    }\n\n    return positionString;\n}\n\nconst Seat = ({ playerData, seatNumber, isCurrent, dealer, smallBlind, bigBlind, cards, selectCard, deselectCard}) => {\n\n    const {action, betAmount, chips, name, seat_number} = playerData\n    const posString = getPositionString(seat_number, dealer, smallBlind, bigBlind);\n\n    return (\n        <div className={action === \"Fold\" ? `seat-${seatNumber}-container-fold` : isCurrent ? `seat-${seatNumber}-container-current`: `seat-${seatNumber}-container`}>\n            <div className={`player-${seatNumber}-action-info-container`}>\n                <h4 className=\"player-bet-amount\">{betAmount}</h4>\n                <h4 className=\"position-label\">{posString}</h4>\n            </div>\n            {cards.map(card =>\n                <img className={card['selected'] ? \"card-selected\" : \"card\"} src={card['value'] === \"DOWN\" ? BlueCard : require('../../resources/Cards/'+card['value']+'.png').default} onClick={() => {card['selected'] ? deselectCard(card) : selectCard(card)}} />\n            )}\n            <h4 className=\"player-name\">{name}</h4>\n            <h4 className=\"player-chip-count\">{chips}</h4>\n        </div>\n    )\n}\n\nexport default Seat","/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/components/Game/Game.jsx",["37","38","39","40","41"],"/Users/garethcarless/Documents/Up_Poker/webapp_2/client/src/components/Home/Home.jsx",[],{"ruleId":"42","severity":1,"message":"43","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"46","severity":1,"message":"47","line":12,"column":34,"nodeType":"48","messageId":"49","endLine":12,"endColumn":36},{"ruleId":"42","severity":1,"message":"50","line":57,"column":12,"nodeType":"44","messageId":"45","endLine":57,"endColumn":20},{"ruleId":"42","severity":1,"message":"51","line":57,"column":44,"nodeType":"44","messageId":"45","endLine":57,"endColumn":48},{"ruleId":"52","severity":1,"message":"53","line":31,"column":17,"nodeType":"54","endLine":31,"endColumn":262},{"ruleId":"42","severity":1,"message":"55","line":5,"column":10,"nodeType":"44","messageId":"45","endLine":5,"endColumn":15},{"ruleId":"42","severity":1,"message":"56","line":6,"column":8,"nodeType":"44","messageId":"45","endLine":6,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":138,"column":49,"nodeType":"48","messageId":"49","endLine":138,"endColumn":51},{"ruleId":"42","severity":1,"message":"50","line":161,"column":16,"nodeType":"44","messageId":"45","endLine":161,"endColumn":24},{"ruleId":"52","severity":1,"message":"53","line":210,"column":38,"nodeType":"54","endLine":210,"endColumn":122},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'username' is assigned a value but never used.","'room' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Input' is defined but never used.","'BlueCard' is defined but never used."]